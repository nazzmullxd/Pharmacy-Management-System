@page "/Customers/Details/{id}"
@model Web.Pages.Customers.DetailsModel
@{
    ViewData["Title"] = "Customer Details";
}

<!-- Enhanced Page Header -->
<div class="page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1><i class="fas fa-user text-info"></i> Customer Details</h1>
            <p class="mb-0">Comprehensive information for: <strong>@Model.Customer?.CustomerName</strong></p>
        </div>
        <div class="d-flex gap-2">
            <a class="btn btn-outline-secondary" href="/Customers">
                <i class="fas fa-arrow-left"></i> Back to Customers
            </a>
            <a class="btn btn-outline-warning" href="/Customers/Edit/@Model.Id">
                <i class="fas fa-edit"></i> Edit Customer
            </a>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        <i class="fas fa-exclamation-triangle"></i>
        <strong>Error:</strong> @Model.ErrorMessage
    </div>
}

@if (!string.IsNullOrEmpty(ViewData["SuccessMessage"]?.ToString()))
{
    <div class="alert alert-success alert-dismissible fade show">
        <i class="fas fa-check-circle"></i>
        <strong>Success:</strong> @ViewData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (Model.Customer == null)
{
    <div class="alert alert-warning">
        <i class="fas fa-exclamation-triangle"></i>
        <strong>Customer Not Found</strong>
        <p class="mb-0">The customer with ID <code>@Model.Id</code> could not be found.</p>
    </div>
    <a class="btn btn-primary" href="/Customers">
        <i class="fas fa-arrow-left"></i> Return to Customer List
    </a>
}
else
{
    <div class="row">
        <!-- Main Information Section -->
        <div class="col-lg-8">
            <!-- Customer Information Card -->
            <div class="dashboard-card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-user text-primary me-2"></i>Customer Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-4">
                        <div class="col-md-6">
                            <div class="info-item">
                                <label class="info-label">
                                    <i class="fas fa-user text-muted me-2"></i>Full Name
                                </label>
                                <div class="info-value">@Model.Customer.CustomerName</div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="info-item">
                                <label class="info-label">
                                    <i class="fas fa-phone text-muted me-2"></i>Contact Number
                                </label>
                                <div class="info-value">
                                    <a href="tel:@Model.Customer.ContactNumber" class="text-decoration-none">
                                        @Model.Customer.ContactNumber
                                    </a>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="info-item">
                                <label class="info-label">
                                    <i class="fas fa-envelope text-muted me-2"></i>Email Address
                                </label>
                                <div class="info-value">
                                    <a href="mailto:@Model.Customer.Email" class="text-decoration-none">
                                        @Model.Customer.Email
                                    </a>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="info-item">
                                <label class="info-label">
                                    <i class="fas fa-map-marker-alt text-muted me-2"></i>Address
                                </label>
                                <div class="info-value">@Model.Customer.Address</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Customer Metadata Card -->
            <div class="dashboard-card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle text-info me-2"></i>Customer Metadata
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <div class="info-item">
                                <label class="info-label">Customer ID</label>
                                <div class="info-value font-monospace text-muted">@Model.Customer.CustomerID</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="info-item">
                                <label class="info-label">Created Date</label>
                                <div class="info-value">@Model.Customer.CreatedDate.ToString("MMM dd, yyyy")</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="info-item">
                                <label class="info-label">Last Purchase</label>
                                <div class="info-value">
                                    @if (Model.Customer.LastPurchaseDate.HasValue)
                                    {
                                        @Model.Customer.LastPurchaseDate.Value.ToString("MMM dd, yyyy")
                                    }
                                    else
                                    {
                                        <span class="text-muted">No purchases yet</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Purchase Statistics Card -->
            <div class="dashboard-card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-bar text-success me-2"></i>Purchase Statistics
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="stats-card">
                                <div class="stats-icon">
                                    <i class="fas fa-shopping-cart text-primary"></i>
                                </div>
                                <div class="stats-content">
                                    <h4 class="stats-number">@(Model.Customer.TotalPurchases?.ToString("N0") ?? "0")</h4>
                                    <p class="stats-label">Total Purchases</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="stats-card">
                                <div class="stats-icon">
                                    <i class="fas fa-dollar-sign text-success"></i>
                                </div>
                                <div class="stats-content">
                                    <h4 class="stats-number">$@(Model.Customer.TotalAmount?.ToString("N2") ?? "0.00")</h4>
                                    <p class="stats-label">Total Amount Spent</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar Actions -->
        <div class="col-lg-4">
            <!-- Quick Actions Card -->
            <div class="dashboard-card mb-4 sticky-sidebar">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-bolt text-warning me-2"></i>Quick Actions
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a href="/Sales/Create?customerId=@Model.Customer.CustomerID" class="btn btn-success">
                            <i class="fas fa-plus"></i> New Sale
                        </a>
                        <a href="/Customers/Edit/@Model.Customer.CustomerID" class="btn btn-warning">
                            <i class="fas fa-edit"></i> Edit Customer
                        </a>
                        <a href="/Reports/Customer/@Model.Customer.CustomerID" class="btn btn-outline-primary">
                            <i class="fas fa-chart-line"></i> View Reports
                        </a>
                        <button type="button" class="btn btn-outline-danger" onclick="confirmDelete()">
                            <i class="fas fa-trash"></i> Delete Customer
                        </button>
                    </div>
                </div>
            </div>

            <!-- Recent Activity Card -->
            <div class="dashboard-card">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-history text-secondary me-2"></i>Recent Activity
                    </h6>
                </div>
                <div class="card-body">
                    <div class="text-center py-3">
                        <i class="fas fa-clock fa-2x text-muted mb-2"></i>
                        <p class="text-muted mb-3">Purchase history and activity tracking will be displayed here.</p>
                        <a href="/Customers/@Model.Customer.CustomerID/History" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-history"></i> View Full History
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Styles {
    <style>
        .info-item {
            margin-bottom: 1rem;
        }

        .info-label {
            font-weight: 600;
            color: #6c757d;
            font-size: 0.875rem;
            margin-bottom: 0.25rem;
            display: block;
        }

        .info-value {
            font-size: 1rem;
            color: #212529;
            padding: 0.5rem 0;
            border-bottom: 1px solid #f1f3f4;
        }

        .stats-card {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 0.5rem;
            border: 1px solid #dee2e6;
        }

        .stats-icon {
            margin-right: 1rem;
        }

        .stats-icon i {
            font-size: 2rem;
        }

        .stats-content h4 {
            margin: 0;
            font-size: 2rem;
            font-weight: bold;
        }

        .stats-content p {
            margin: 0;
            color: #6c757d;
            font-size: 0.875rem;
        }

        .sticky-sidebar {
            position: sticky;
            top: 20px;
        }

        .dashboard-card .card-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-bottom: 1px solid #dee2e6;
        }

        .page-header {
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #dee2e6;
        }

        .font-monospace {
            font-family: 'Courier New', monospace;
        }

        /* Mobile responsive styles */
        @@media (max-width: 768px) {
            .page-header .d-flex {
                flex-direction: column;
                gap: 1rem;
            }
            
            .page-header .btn {
                width: 100%;
            }

            .sticky-sidebar {
                position: relative;
            }

            .stats-card {
                flex-direction: column;
                text-align: center;
            }

            .stats-icon {
                margin-right: 0;
                margin-bottom: 0.5rem;
            }

            .d-flex.gap-2 {
                flex-direction: column;
            }
        }
    </style>
}

@section Scripts {
    <script>
        // Delete confirmation with form submission
        function confirmDelete() {
            if (confirm('Are you sure you want to delete this customer? This action cannot be undone.')) {
                // Create a form for delete action
                const form = document.createElement('form');
                form.method = 'post';
                if (@Html.Raw(Model.Customer != null ? "true" : "false")) {
                    form.action = '/Customers/Edit/@Model.Customer!.CustomerID?handler=Delete';
                } else {
                    form.action = '/Customers/Edit/@Model.Id?handler=Delete';
                }
                
                // Add anti-forgery token
                const token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    const tokenInput = document.createElement('input');
                    tokenInput.type = 'hidden';
                    tokenInput.name = '__RequestVerificationToken';
                    tokenInput.value = token.value;
                    form.appendChild(tokenInput);
                }
                
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Auto-dismiss success alerts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            const alerts = document.querySelectorAll('.alert-success.alert-dismissible');
            alerts.forEach(alert => {
                setTimeout(() => {
                    const alertInstance = new bootstrap.Alert(alert);
                    alertInstance.close();
                }, 5000);
            });
        });

        // Copy customer ID to clipboard
        document.addEventListener('DOMContentLoaded', function() {
            const customerIdElement = document.querySelector('.font-monospace');
            if (customerIdElement) {
                customerIdElement.style.cursor = 'pointer';
                customerIdElement.title = 'Click to copy Customer ID';
                
                customerIdElement.addEventListener('click', function() {
                    navigator.clipboard.writeText(this.textContent).then(() => {
                        // Show temporary feedback
                        const originalText = this.textContent;
                        this.textContent = 'Copied!';
                        this.style.color = '#28a745';
                        
                        setTimeout(() => {
                            this.textContent = originalText;
                            this.style.color = '';
                        }, 1000);
                    });
                });
            }
        });
    </script>
}

<!-- Hidden anti-forgery token for delete operations -->
@Html.AntiForgeryToken()


