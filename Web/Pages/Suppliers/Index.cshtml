@page
@model Web.Pages.Suppliers.IndexModel
@{
    ViewData["Title"] = "Suppliers Management";
}

<!-- Enhanced Page Header -->
<div class="page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1><i class="fas fa-industry text-primary"></i> Suppliers Management</h1>
            <p class="mb-0">Manage your pharmacy's supplier network and vendor relationships</p>
        </div>
        <div class="d-flex gap-2">
            <a href="/Suppliers/Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add New Supplier
            </a>
            <button type="button" class="btn btn-outline-secondary" onclick="exportSuppliers()">
                <i class="fas fa-download"></i> Export
            </button>
        </div>
    </div>
</div>

<!-- Quick Filters & Search -->
<div class="dashboard-card mb-4">
    <div class="row align-items-center">
        <div class="col-md-4">
            <h6 class="mb-2 text-muted">Quick Actions</h6>
            <div class="d-flex gap-2 flex-wrap">
                <a href="/Suppliers/Create" class="btn btn-sm btn-success">
                    <i class="fas fa-plus-circle"></i> Add Supplier
                </a>
                <button class="btn btn-sm btn-outline-secondary" onclick="refreshPage()">
                    <i class="fas fa-sync-alt"></i> Refresh
                </button>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row g-3">
                <div class="col-md-4">
                    <label class="form-label small text-muted">Filter by Status</label>
                    <select class="form-select form-select-sm" id="statusFilter">
                        <option value="">All Suppliers</option>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label small text-muted">Sort By</label>
                    <select class="form-select form-select-sm" id="sortFilter">
                        <option value="name">Name (A-Z)</option>
                        <option value="recent">Recently Added</option>
                        <option value="contact">Contact Person</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label small text-muted">Search Suppliers</label>
                    <div class="input-group input-group-sm">
                        <input type="text" class="form-control" id="searchInput" placeholder="Name, email, phone...">
                        <button class="btn btn-outline-secondary" type="button" id="searchBtn">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Suppliers Summary Cards -->
<div class="kpi-grid mb-4">
    <div class="kpi-card">
        <div class="kpi-header">
            <div class="kpi-title">Total Suppliers</div>
            <div class="kpi-icon" style="background: linear-gradient(45deg, #3498db, #5dade2);">
                <i class="fas fa-industry"></i>
            </div>
        </div>
        <div class="kpi-value">@(Model.Suppliers?.Count() ?? 0)</div>
        <div class="kpi-change positive">
            <i class="fas fa-chart-bar"></i> Active vendors
        </div>
    </div>

    <div class="kpi-card">
        <div class="kpi-header">
            <div class="kpi-title">Active Suppliers</div>
            <div class="kpi-icon" style="background: linear-gradient(45deg, #27ae60, #2ecc71);">
                <i class="fas fa-check-circle"></i>
            </div>
        </div>
        <div class="kpi-value">@(Model.Suppliers?.Count() ?? 0)</div>
        <div class="kpi-change positive">
            <i class="fas fa-arrow-up"></i> Available
        </div>
    </div>

    <div class="kpi-card">
        <div class="kpi-header">
            <div class="kpi-title">Top Supplier</div>
            <div class="kpi-icon" style="background: linear-gradient(45deg, #f39c12, #f7dc6f);">
                <i class="fas fa-star"></i>
            </div>
        </div>
        <div class="kpi-value">
            @{
                var topSupplier = Model.Suppliers?.FirstOrDefault();
                var displayName = topSupplier?.SupplierName;
                if (!string.IsNullOrEmpty(displayName))
                {
                    displayName = displayName.Length > 15 ? displayName.Substring(0, 15) + "..." : displayName;
                }
                else
                {
                    displayName = "N/A";
                }
            }
            @displayName
        </div>
        <div class="kpi-change positive">
            <i class="fas fa-trophy"></i> Best rated
        </div>
    </div>

    <div class="kpi-card">
        <div class="kpi-header">
            <div class="kpi-title">Contact Methods</div>
            <div class="kpi-icon" style="background: linear-gradient(45deg, #9b59b6, #bb6bd9);">
                <i class="fas fa-phone"></i>
            </div>
        </div>
        <div class="kpi-value">@(Model.Suppliers?.Count(s => !string.IsNullOrEmpty(s.Email) && !string.IsNullOrEmpty(s.PhoneNumber)) ?? 0)</div>
        <div class="kpi-change positive">
            <i class="fas fa-check-circle"></i> Complete info
        </div>
    </div>
</div>

<!-- Suppliers Table -->
<div class="table-container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h5 class="mb-0"><i class="fas fa-list text-primary"></i> All Suppliers</h5>
        <div class="d-flex align-items-center gap-3">
            <small class="text-muted">
                Showing @(Model.Suppliers?.Count() ?? 0) suppliers
            </small>
            <div class="d-flex gap-2">
                <button class="btn btn-sm btn-outline-secondary" onclick="toggleView('table')" id="tableViewBtn">
                    <i class="fas fa-table"></i>
                </button>
                <button class="btn btn-sm btn-outline-secondary" onclick="toggleView('card')" id="cardViewBtn">
                    <i class="fas fa-th-large"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Table View -->
    <div id="tableView" class="table-responsive">
        <table class="table table-hover" id="suppliersTable">
            <thead class="table-light">
                <tr>
                    <th class="sortable" data-sort="0">
                        <i class="fas fa-industry text-muted me-1"></i>Supplier Name
                        <i class="fas fa-sort text-muted ms-1"></i>
                    </th>
                    <th class="sortable" data-sort="1">
                        <i class="fas fa-user text-muted me-1"></i>Contact Person
                        <i class="fas fa-sort text-muted ms-1"></i>
                    </th>
                    <th class="sortable" data-sort="2">
                        <i class="fas fa-phone text-muted me-1"></i>Phone
                        <i class="fas fa-sort text-muted ms-1"></i>
                    </th>
                    <th class="sortable" data-sort="3">
                        <i class="fas fa-envelope text-muted me-1"></i>Email
                        <i class="fas fa-sort text-muted ms-1"></i>
                    </th>
                    <th class="sortable" data-sort="4">
                        <i class="fas fa-map-marker-alt text-muted me-1"></i>Address
                        <i class="fas fa-sort text-muted ms-1"></i>
                    </th>
                    <th class="text-center">
                        <i class="fas fa-toggle-on text-muted me-1"></i>Status
                    </th>
                    <th class="text-center" style="width: 150px;">
                        <i class="fas fa-cogs text-muted me-1"></i>Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Suppliers != null && Model.Suppliers.Any())
                {
                    @foreach (var supplier in Model.Suppliers)
                    {
                        <tr class="supplier-row" data-supplier-id="@supplier.SupplierID">
                            <td>
                                <div class="supplier-info">
                                    <div class="supplier-name">@supplier.SupplierName</div>
                                    <small class="supplier-id text-muted">
                                        <i class="fas fa-tag me-1"></i>ID: @supplier.SupplierID
                                    </small>
                                </div>
                            </td>
                            <td>
                                <div class="contact-info">
                                    @if (!string.IsNullOrEmpty(supplier.ContactPerson))
                                    {
                                        <div class="contact-name">@supplier.ContactPerson</div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not specified</span>
                                    }
                                </div>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(supplier.PhoneNumber))
                                {
                                    <div class="phone-info">
                                        <a href="tel:@supplier.PhoneNumber" class="text-decoration-none">
                                            <i class="fas fa-phone me-1 text-success"></i>@supplier.PhoneNumber
                                        </a>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">Not provided</span>
                                }
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(supplier.Email))
                                {
                                    <div class="email-info">
                                        <a href="mailto:@supplier.Email" class="text-decoration-none">
                                            <i class="fas fa-envelope me-1 text-info"></i>@supplier.Email
                                        </a>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">Not provided</span>
                                }
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(supplier.Address))
                                {
                                    <div class="address-info">
                                        <span title="@supplier.Address">
                                            @(supplier.Address.Length > 30 ? supplier.Address.Substring(0, 30) + "..." : supplier.Address)
                                        </span>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">Not provided</span>
                                }
                            </td>
                            <td class="text-center">
                                <span class="badge bg-success status-badge">
                                    <i class="fas fa-check-circle me-1"></i>Active
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons d-flex gap-1 justify-content-center">
                                    <a href="/Suppliers/Details/@supplier.SupplierID" 
                                       class="btn btn-sm btn-outline-info" 
                                       title="View Details"
                                       data-bs-toggle="tooltip">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="/Suppliers/Edit/@supplier.SupplierID" 
                                       class="btn btn-sm btn-outline-primary" 
                                       title="Edit Supplier"
                                       data-bs-toggle="tooltip">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" 
                                                type="button" 
                                                data-bs-toggle="dropdown" 
                                                aria-expanded="false"
                                                title="More Actions">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li><a class="dropdown-item" href="/Suppliers/Details/@supplier.SupplierID">
                                                <i class="fas fa-eye me-2"></i>View Details
                                            </a></li>
                                            <li><a class="dropdown-item" href="/Suppliers/Edit/@supplier.SupplierID">
                                                <i class="fas fa-edit me-2"></i>Edit Supplier
                                            </a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" href="/Purchases/Create?supplierId=@supplier.SupplierID">
                                                <i class="fas fa-shopping-cart me-2"></i>Create Purchase Order
                                            </a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><button class="dropdown-item text-danger" onclick="confirmDelete('@supplier.SupplierID', '@supplier.SupplierName')">
                                                <i class="fas fa-trash me-2"></i>Delete Supplier
                                            </button></li>
                                        </ul>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center py-5">
                            <div class="empty-state">
                                <i class="fas fa-industry fa-3x text-muted mb-3"></i>
                                <h6 class="text-muted">No suppliers found</h6>
                                <p class="text-muted mb-3">Get started by adding your first supplier to the system</p>
                                <a href="/Suppliers/Create" class="btn btn-primary">
                                    <i class="fas fa-plus"></i> Add First Supplier
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Card View (Alternative View) -->
    <div id="cardView" style="display: none;" class="row">
        @if (Model.Suppliers != null && Model.Suppliers.Any())
        {
            @foreach (var supplier in Model.Suppliers)
            {
                <div class="col-lg-6 col-xl-4 mb-3">
                    <div class="card supplier-card h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">@supplier.SupplierName</h6>
                            <span class="badge bg-success">Active</span>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                @if (!string.IsNullOrEmpty(supplier.ContactPerson))
                                {
                                    <p class="mb-1"><i class="fas fa-user me-2 text-muted"></i><strong>@supplier.ContactPerson</strong></p>
                                }
                            </div>
                            <div class="contact-details">
                                @if (!string.IsNullOrEmpty(supplier.PhoneNumber))
                                {
                                    <p class="mb-1">
                                        <i class="fas fa-phone me-2 text-success"></i>
                                        <a href="tel:@supplier.PhoneNumber" class="text-decoration-none">@supplier.PhoneNumber</a>
                                    </p>
                                }
                                @if (!string.IsNullOrEmpty(supplier.Email))
                                {
                                    <p class="mb-1">
                                        <i class="fas fa-envelope me-2 text-info"></i>
                                        <a href="mailto:@supplier.Email" class="text-decoration-none small">@supplier.Email</a>
                                    </p>
                                }
                                @if (!string.IsNullOrEmpty(supplier.Address))
                                {
                                    <p class="mb-1">
                                        <i class="fas fa-map-marker-alt me-2 text-warning"></i>
                                        <small class="text-muted">@supplier.Address</small>
                                    </p>
                                }
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex gap-1">
                                <a href="/Suppliers/Details/@supplier.SupplierID" class="btn btn-sm btn-outline-info flex-fill">
                                    <i class="fas fa-eye"></i> View
                                </a>
                                <a href="/Suppliers/Edit/@supplier.SupplierID" class="btn btn-sm btn-outline-primary flex-fill">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Styles {
    <style>
        .supplier-row {
            transition: all 0.3s ease;
        }
        
        .supplier-row:hover {
            background-color: #f8f9fa;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .supplier-info .supplier-name {
            font-weight: 600;
            color: #2c3e50;
            font-size: 1rem;
        }
        
        .supplier-info .supplier-id {
            font-size: 0.75rem;
            color: #6c757d;
        }
        
        .contact-info .contact-name {
            font-weight: 500;
            color: #495057;
        }
        
        .phone-info a, .email-info a {
            color: #495057;
            transition: color 0.2s ease;
        }
        
        .phone-info a:hover {
            color: #198754;
        }
        
        .email-info a:hover {
            color: #0d6efd;
        }
        
        .address-info {
            font-size: 0.9rem;
            color: #6c757d;
        }
        
        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 1rem;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .action-buttons .btn {
            transition: all 0.2s ease;
            border-radius: 0.5rem;
        }
        
        .action-buttons .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }
        
        .sortable {
            cursor: pointer;
            user-select: none;
            transition: background-color 0.2s ease;
            position: relative;
        }
        
        .sortable:hover {
            background-color: #e9ecef;
        }
        
        .sortable.sort-asc::after {
            content: '↑';
            position: absolute;
            right: 5px;
            color: #0d6efd;
            font-weight: bold;
        }
        
        .sortable.sort-desc::after {
            content: '↓';
            position: absolute;
            right: 5px;
            color: #0d6efd;
            font-weight: bold;
        }
        
        .table-responsive {
            border-radius: 0.5rem;
            border: 1px solid #dee2e6;
        }
        
        .table {
            margin-bottom: 0;
        }
        
        .table th {
            border-top: none;
            font-weight: 600;
            color: #495057;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            padding: 1rem 0.75rem;
        }
        
        .table td {
            padding: 1rem 0.75rem;
            vertical-align: middle;
            border-top: 1px solid #f8f9fa;
        }
        
        .supplier-card {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
            border-radius: 0.75rem;
        }
        
        .supplier-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            border-color: #0d6efd;
        }
        
        .supplier-card .card-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-bottom: 1px solid #dee2e6;
            border-radius: 0.75rem 0.75rem 0 0;
        }
        
        .supplier-card .card-footer {
            background: transparent;
            border-top: 1px solid #f8f9fa;
        }
        
        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
        }
        
        .empty-state .fa-3x {
            font-size: 3rem;
            opacity: 0.5;
        }
        
        .contact-details p {
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
        }
        
        .contact-details i {
            width: 16px;
            text-align: center;
        }
        
        /* Enhanced dropdown styling */
        .dropdown-menu {
            border: none;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            border-radius: 0.5rem;
            padding: 0.5rem 0;
        }
        
        .dropdown-item {
            padding: 0.5rem 1rem;
            transition: all 0.2s ease;
        }
        
        .dropdown-item:hover {
            background-color: #f8f9fa;
            transform: translateX(5px);
        }
        
        .dropdown-item.text-danger:hover {
            background-color: #fff5f5;
            color: #dc3545;
        }
        
        /* Loading animation */
        .loading {
            position: relative;
            overflow: hidden;
        }
        
        .loading::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
            animation: loading 1.5s infinite;
        }
        
        @@keyframes loading {
            0% { left: -100%; }
            100% { left: 100%; }
        }
        
        /* Responsive improvements */
        @@media (max-width: 768px) {
            .action-buttons {
                flex-direction: column;
                gap: 0.25rem;
            }
            
            .supplier-card .card-footer .d-flex {
                flex-direction: column;
            }
            
            .supplier-card .card-footer .btn {
                margin-bottom: 0.5rem;
            }
            
            .table th, .table td {
                padding: 0.5rem;
                font-size: 0.875rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Enhanced filtering functionality
        document.getElementById('statusFilter').addEventListener('change', function() {
            filterSuppliers();
        });

        document.getElementById('sortFilter').addEventListener('change', function() {
            sortSuppliers();
        });

        // Enhanced Search functionality
        const searchInput = document.getElementById('searchInput');
        const searchBtn = document.getElementById('searchBtn');

        searchInput.addEventListener('input', debounce(filterSuppliers, 300));
        searchBtn.addEventListener('click', filterSuppliers);

        function filterSuppliers() {
            const statusFilter = document.getElementById('statusFilter').value.toLowerCase();
            const searchTerm = searchInput.value.toLowerCase();
            const rows = document.querySelectorAll('#suppliersTable tbody tr.supplier-row');
            
            let visibleCount = 0;
            
            rows.forEach(row => {
                const supplierNameCell = row.querySelector('.supplier-name');
                const contactPersonCell = row.querySelector('.contact-name');
                const phoneCell = row.querySelector('.phone-info a');
                const emailCell = row.querySelector('.email-info a');
                
                let shouldShow = true;
                
                // Search filter
                if (searchTerm) {
                    const searchableText = [
                        supplierNameCell?.textContent || '',
                        contactPersonCell?.textContent || '',
                        phoneCell?.textContent || '',
                        emailCell?.textContent || ''
                    ].join(' ').toLowerCase();
                    
                    if (!searchableText.includes(searchTerm)) {
                        shouldShow = false;
                    }
                }
                
                row.style.display = shouldShow ? '' : 'none';
                if (shouldShow) visibleCount++;
            });
            
            // Update results count
            updateResultsCount(visibleCount);
            
            // Show no results message if needed
            toggleNoResultsMessage(visibleCount === 0);
        }

        function updateResultsCount(count) {
            const countElement = document.querySelector('.table-container small');
            if (countElement) {
                countElement.textContent = `Showing ${count} suppliers`;
            }
        }

        function toggleNoResultsMessage(show) {
            let noResultsRow = document.getElementById('noResultsRow');
            
            if (show && !noResultsRow) {
                const tbody = document.querySelector('#suppliersTable tbody');
                noResultsRow = document.createElement('tr');
                noResultsRow.id = 'noResultsRow';
                noResultsRow.innerHTML = `
                    <td colspan="7" class="text-center py-4">
                        <div class="empty-state">
                            <i class="fas fa-search fa-2x text-muted mb-2"></i>
                            <h6 class="text-muted">No suppliers match your criteria</h6>
                            <p class="text-muted mb-0">Try adjusting your search terms</p>
                        </div>
                    </td>
                `;
                tbody.appendChild(noResultsRow);
            } else if (!show && noResultsRow) {
                noResultsRow.remove();
            }
        }

        // View toggle functionality
        function toggleView(viewType) {
            const tableView = document.getElementById('tableView');
            const cardView = document.getElementById('cardView');
            const tableBtn = document.getElementById('tableViewBtn');
            const cardBtn = document.getElementById('cardViewBtn');
            
            if (viewType === 'table') {
                tableView.style.display = 'block';
                cardView.style.display = 'none';
                tableBtn.classList.add('btn-primary');
                tableBtn.classList.remove('btn-outline-secondary');
                cardBtn.classList.add('btn-outline-secondary');
                cardBtn.classList.remove('btn-primary');
            } else {
                tableView.style.display = 'none';
                cardView.style.display = 'block';
                cardBtn.classList.add('btn-primary');
                cardBtn.classList.remove('btn-outline-secondary');
                tableBtn.classList.add('btn-outline-secondary');
                tableBtn.classList.remove('btn-primary');
            }
            
            // Save preference
            localStorage.setItem('suppliersViewPreference', viewType);
        }

        // Restore view preference
        document.addEventListener('DOMContentLoaded', function() {
            const savedView = localStorage.getItem('suppliersViewPreference') || 'table';
            toggleView(savedView);
        });

        // Export functionality
        function exportSuppliers() {
            const visibleRows = Array.from(document.querySelectorAll('#suppliersTable tbody tr.supplier-row'))
                .filter(row => row.style.display !== 'none');
            
            if (visibleRows.length === 0) {
                alert('No data to export');
                return;
            }
            
            console.log(`Exporting ${visibleRows.length} suppliers...`);
            alert(`Export functionality will be implemented to export ${visibleRows.length} suppliers`);
        }

        // Refresh page
        function refreshPage() {
            window.location.reload();
        }

        // Delete confirmation
        function confirmDelete(supplierId, supplierName) {
            if (confirm(`Are you sure you want to delete "${supplierName}"? This action cannot be undone and may affect existing purchase orders.`)) {
                console.log(`Deleting supplier: ${supplierId}`);
                alert('Delete functionality will be implemented');
            }
        }

        // Sort functionality
        function sortSuppliers() {
            const sortValue = document.getElementById('sortFilter').value;
            const tbody = document.querySelector('#suppliersTable tbody');
            const rows = Array.from(tbody.querySelectorAll('tr.supplier-row'));
            
            rows.sort((a, b) => {
                let aVal, bVal;
                
                switch(sortValue) {
                    case 'name':
                        aVal = a.cells[0].textContent.trim();
                        bVal = b.cells[0].textContent.trim();
                        break;
                    case 'contact':
                        aVal = a.cells[1].textContent.trim();
                        bVal = b.cells[1].textContent.trim();
                        break;
                    case 'recent':
                        // For demo purposes, reverse order
                        return b.getAttribute('data-supplier-id') - a.getAttribute('data-supplier-id');
                    default:
                        aVal = a.cells[0].textContent.trim();
                        bVal = b.cells[0].textContent.trim();
                }
                
                return aVal.localeCompare(bVal);
            });
            
            // Reorder rows
            rows.forEach(row => tbody.appendChild(row));
        }

        // Debounce function for search
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Sort table functionality
        document.querySelectorAll('.sortable').forEach(header => {
            header.addEventListener('click', function() {
                const columnIndex = this.getAttribute('data-sort');
                
                // Toggle sort direction
                let sortDirection = 'asc';
                if (this.classList.contains('sort-asc')) {
                    sortDirection = 'desc';
                    this.classList.remove('sort-asc');
                    this.classList.add('sort-desc');
                } else {
                    sortDirection = 'asc';
                    this.classList.remove('sort-desc');
                    this.classList.add('sort-asc');
                }
                
                // Remove sort classes from other headers
                document.querySelectorAll('.sortable').forEach(h => {
                    if (h !== this) {
                        h.classList.remove('sort-asc', 'sort-desc');
                    }
                });
                
                // Perform sort
                sortTable(columnIndex, sortDirection);
            });
        });

        function sortTable(columnIndex, direction) {
            const tbody = document.querySelector('#suppliersTable tbody');
            const rows = Array.from(tbody.querySelectorAll('tr.supplier-row'));
            
            rows.sort((a, b) => {
                const aVal = a.cells[columnIndex].textContent.trim();
                const bVal = b.cells[columnIndex].textContent.trim();
                
                const comparison = aVal.localeCompare(bVal);
                return direction === 'asc' ? comparison : -comparison;
            });
            
            // Reorder rows
            rows.forEach(row => tbody.appendChild(row));
        }
    </script>
}
