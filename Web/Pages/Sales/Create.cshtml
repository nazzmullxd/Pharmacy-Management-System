@page
@model Web.Pages.Sales.CreateModel
@{
    ViewData["Title"] = "New Sale";
}

<div class="page-header">
    <h1><i class="fas fa-plus"></i> New Sale</h1>
    <a class="btn btn-secondary" href="/Sales">Back to Sales</a>
</div>
<form method="post" class="card p-3">
    <div class="row g-3">
        <div class="col-md-6">
            <label class="form-label">Customer Name</label>
            <input type="text" asp-for="Sale.CustomerName" class="form-control" id="customerNameInput" autocomplete="off" placeholder="Type customer name..." />
            <div id="customerSuggestions" class="list-group position-absolute w-100" style="z-index:1000;"></div>
            <input type="hidden" asp-for="Sale.CustomerID" id="customerIdInput" />
            <small class="form-text text-muted">Type to search or add new customer by name.</small>
        </div>
        <div class="col-md-6">
            <label class="form-label">Note</label>
            <input asp-for="Sale.Note" class="form-control" />
        </div>
    </div>

    <hr />
    <h5>Add Items</h5>
    <div class="row g-2 align-items-end">
        <div class="col-md-6">
            <label class="form-label">Product</label>
            <select name="productId" class="form-select">
                <option value="">-- Select Product --</option>
                @foreach (var p in Model.Products)
                {
                    <option value="@p.ProductID">@p.ProductName (@p.UnitPrice.ToString("C"))</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <label class="form-label">Quantity</label>
            <input name="quantity" type="number" class="form-control" />
        </div>
        <div class="col-md-3">
            <button type="submit" asp-page-handler="AddItem" class="btn btn-outline-primary">Add Item</button>
        </div>
    </div>

    <div class="table-responsive mt-3">
        <table class="table table-sm table-bordered">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Qty</th>
                    <th>Unit</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var i in Model.Sale.SaleItems)
                {
                    <tr>
                        <td>@i.ProductName</td>
                        <td>@i.Quantity</td>
                        <td>@i.UnitPrice.ToString("C")</td>
                        <td>@i.TotalPrice.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="text-end">
        <div><strong>Total:</strong> @Model.Sale.TotalAmount.ToString("C")</div>
        <button type="submit" asp-page-handler="Create" class="btn btn-success mt-2">Create Sale</button>
    </div>

    <div asp-validation-summary="All" class="text-danger mt-2"></div>
</form>

@section Scripts {
    <script>
        // Basic autocomplete logic (AJAX endpoint to be implemented)
        const input = document.getElementById('customerNameInput');
        const suggestions = document.getElementById('customerSuggestions');
        const customerIdInput = document.getElementById('customerIdInput');
        let timeout;
        input.addEventListener('input', function() {
            clearTimeout(timeout);
            const query = this.value.trim();
            if (query.length < 2) {
                suggestions.innerHTML = '';
                return;
            }
            timeout = setTimeout(() => {
                fetch(`/api/customers/search?name=${encodeURIComponent(query)}`)
                    .then(res => res.json())
                    .then(data => {
                        suggestions.innerHTML = '';
                        if (data.length > 0) {
                            data.forEach(c => {
                                const item = document.createElement('button');
                                item.type = 'button';
                                item.className = 'list-group-item list-group-item-action';
                                item.textContent = c.customerName;
                                item.onclick = () => {
                                    input.value = c.customerName;
                                    customerIdInput.value = c.customerID;
                                    suggestions.innerHTML = '';
                                };
                                suggestions.appendChild(item);
                            });
                        }
                    });
            }, 300);
        });
        document.addEventListener('click', function(e) {
            if (!suggestions.contains(e.target) && e.target !== input) {
                suggestions.innerHTML = '';
            }
        });
    </script>
}
